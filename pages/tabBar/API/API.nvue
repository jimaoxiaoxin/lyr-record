<template>
    <view class="uni-container">
        <template v-if="showSetTabBarPage">
            <set-tab-bar @unmount="leaveSetTabBarPage"></set-tab-bar>
        </template>
        <template v-else>
			<uni-section title="听写目录" type="line">
				<uni-list>
					<uni-list-item v-for="(dir, index) in dirs" :title="dir" clickable
						@click="goDetailPage('media', 'voice', dir)"/>
				</uni-list>
			</uni-section>
			<view>
				<button type="primary" @click="inputDialogToggle">
					创建听写目录
				</button>
				<!-- 输入框示例 -->
				<uni-popup ref="inputDialog" type="dialog">
					<uni-popup-dialog ref="inputClose"  mode="input" title="创建新的听写目录"
						placeholder="请输入目录名称" @confirm="dialogInputConfirm"></uni-popup-dialog>
				</uni-popup>
			</view>
			
            <view v-if="!hasLeftWin" class="uni-header-logo">
                <image class="uni-header-image" src="/static/apiIndex.png"></image>
            </view>
            <view v-if="!hasLeftWin" class="uni-hello-text">
                <text class="hello-text">以下将演示uni-app接口能力，详细文档见：</text>
                <u-link class="hello-link" :href="'https://uniapp.dcloud.io/api/'" :text="'https://uniapp.dcloud.io/api/'"
                    :inWhiteList="true"></u-link>
            </view>
            <view class="uni-panel" v-for="(item, index) in list" :key="item.id">
                <view class="uni-panel-h" :class="item.open ? 'uni-panel-h-on' : ''" @click="triggerCollapse(index, item.id)">
                    <text class="uni-panel-text">{{item.name}}</text>
                    <text class="uni-panel-icon uni-icon" :class="item.open ? 'uni-panel-icon-on' : ''">{{item.pages ? '&#xe581;' : '&#xe470;'}}</text>
                </view>
                <view class="uni-panel-c" v-if="item.open">
                    <view :class="{'left-win-active': leftWinActive === item2.url && hasLeftWin, 'pc-hide': item2.name === '设置TabBar' && hasLeftWin}" class="uni-navigate-item" v-for="(item2,key) in item.pages" :key="key" :url="item.url" @click="goDetailPage(item.id, item2.url)">
                        <text class="uni-navigate-text">{{item2.name ? item2.name : item2}}</text>
                        <text class="uni-navigate-icon uni-icon">&#xe470;</text>
                    </view>
                </view>
            </view>
        </template>
    </view>
</template>
<script>
    import setTabBar from '@/components/api-set-tabbar.nvue';
    export default {
        components: {
            setTabBar
        },
		props: {
			hasLeftWin: {
				type: Boolean
			},
			leftWinActive: {
				type: String
			}
		},
        data() {

            // 暂时这么写，后面看怎么优化。
            let mediaPages = [
                {
                    name: '录音',
                    url: 'voice'
                }
            ];

            const list = [
                {
                    id: 'media',
                    name: '媒体',
                    open: false,
                    pages: mediaPages
                }
            ];
            return {
				dirs: [],
				value: '',
                showSetTabBarPage: false,
                list: list,
				notForPc: [{
						name: '设置TabBar',
						url: 'set-tabbar'
				}]
            };
        },
        onShareAppMessage() {
            return {
                title: '欢迎体验uni-app',
                path: '/pages/tabBar/API/API'
            };
        },
        onNavigationBarButtonTap(e) {
            uni.navigateTo({
                url: '/pages/about/about'
            });
        },
        onLoad() {
			this.initDirNames();
        },
        onReady() {
        },
        onShow() {
            this.navigateFlag = false;
            this.leaveSetTabBarPage();
        },
        onHide() {
            this.leaveSetTabBarPage();
        },

		// #ifdef H5
		watch:{
			$route: {
				immediate: true,
				handler(newRoute) {
					if (newRoute.matched.length) {
						let path = newRoute.path.split('/')[3]
						for (const item of this.list) {
							if (Array.isArray(item.pages)) {
								for (const page of item.pages) {
									if (page === path || page.url && page.url === path) {
										item.open = true
									}
								}
							}
						}
					}
				}
			}
		},
		// #endif
        methods: {
			redirToDir(dir) {
				uni.navigateTo({
					url: 'voice'
				})
			},
			inputDialogToggle() {
				this.$refs.inputDialog.open()
			},
			dialogInputConfirm(val) {
				uni.showLoading({
					title: '正在保存'
				})
					
				uni.request({
					url: 'http://47.94.170.153/dir',
					method: 'post',
					data: {
						dir_name: val
					},
					header: {
						'custom-header': 'hello'
					},
					success: (res) => {
						console.log(res.data);
						this.initDirNames();
						uni.hideLoading();
					}
				})
			},
			initDirNames() {
				uni.request({
					url: 'http://47.94.170.153/dirs',
					success: (res) => {
						// console.log(res.data);
						this.dirs = res.data;
					}
				})
			},
            triggerCollapse(e, id) {
                if (!this.list[e].pages) {
                    this.goDetailPage('', this.list[e].url);
                    return;
                }
				for (var i = 0; i < this.list.length; ++i) {
					if (e === i) {
						this.list[i].open = !this.list[i].open;
					} else {
						this.list[i].open = false;
					}
				}
            },
            goDetailPage(panel, e, dir) {
				if (e === 'set-tabbar') {
					this.showSetTabBarPage = true;
					return;
				}
				let url = ~e.indexOf('platform') ? e : '/pages/API/' + e + '/' + e;
				if (this.hasLeftWin) {
					uni.reLaunch({
						url: url + "?dirName=" + dir
					})
				} else {
					uni.navigateTo({
						url: url + "?dirName=" + dir
					})
				}
            },
            leaveSetTabBarPage() {
                this.showSetTabBarPage = false;
            }
        }
    };
</script>

<style>
    @import '../../../common/uni-nvue.css';
</style>
